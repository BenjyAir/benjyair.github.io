<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

    <title>曾经不知你好</title>
    <link href="http://liyouhai.com/rss.xml" rel="self"/>
    <link href="http://liyouhai.com/"/>
    <updated>2014-09-29T00:16:24+08:00</updated>
    <id>http://liyouhai.com/</id>
    <author>
        <name>liyouhai</name>
        <email>liyouhai@vip.qq.com</email>
    </author>

    
    <entry>
        <title>Android BroadcastReceiver 接收顺序</title>
        <link href="http://liyouhai.com/android/Android%20BroadcastReceiver%20%E6%8E%A5%E6%94%B6%E9%A1%BA%E5%BA%8F.html"/>
        <updated>2014-09-28T00:00:00+08:00</updated>
        <id>http://liyouhai.com//android/Android BroadcastReceiver 接收顺序</id>
        <content type="html">&lt;hr /&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;今天项目里有这样一个需求，访问一个请求并把手机号作为参数传过去，同时拦截收到的短信验证码，自动填进EditText，一个看似很简单的功能。然而在真机上测试竟然没有拦截到，把优先级调到最大也无济于事。&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;四处寻访，原来BroadcastReceiver除了有优先级顺序之外，还有注册的顺序。&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;大家都知道广播分有序广播和无序广播，有序广播和无序广播的区别就是，有序广播可以被任何一个接受者消耗掉，而无序广播则不可以，注册的话既可以在代码里面动态注册，也可以在Manifest里面直接声明，屌丝青年大多会直接在Manifest里面定义注册，文艺青年一般使用代码动态注册。这两种方式接受的广播的顺序是不一样的。&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;一般来说有序广播在同等优先级的情况下有这样的顺序&lt;/p&gt;

&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;动态注册的BroadcastReceiver，先注册的先接收&lt;/li&gt;
&lt;li&gt;Manifest里注册的BroadcastReceiver，接收广播的顺序与String[] java.io.File.list()顺序一致&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在不同优先级的情况下&lt;/p&gt;

&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;有序广播按优先级顺序接收&lt;/li&gt;
&lt;li&gt;无序广播因为是异步的所以接收broadcast的顺序不确定。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt; 假设有如下优先级的5个接收器  并且B先于C注册     &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt; 1.动态A（优先级=1）      &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 2.动态B（优先级=2）      &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 3.动态C（优先级=2）      &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 4.静态D（优先级=1)       &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 5.静态E（优先级=2）      &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 那么实际接收顺序应为：  B C E A D  &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;hr /&gt;

&lt;h2&gt;关于 String[] java.io.File.list()&lt;/h2&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;我们以开机时候发出的广播android.intent.action.BOOT_COMPLETED为例，这是个无序广播。如果应用想要开启自启动，那么就要监听这个广播，程序启动之前，动态广播接收器肯定是无法使用的，只能在XML中静态注册。大家都知道，第三方应用是存放在/data/app目录下，当安装完毕之后，你会找到一个文件，他的名字是以与安装的应用包名开始的，然后可能会跟着&quot;-数字.apk&quot;，比如：com.android.test-1.apk。接收的顺序与这个名字是有关的！那么关系是怎样的呢？&lt;/p&gt;

&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;系统在开机的时候，会按着一个顺序解析apk，首先，会解析手机中的/system/framework这个目录，原生系统中，这下面就一个apk - framework-res.apk，当然各个厂商也会加入自己的内容&lt;/li&gt;
&lt;li&gt;然后受到重视的文件夹按顺序分别为：
/system/app，
/vendor/app，
/data/app，
/drm/app-private
那么每个文件夹下解析的顺序是怎样的呢？我们先只看/data/app，也就是用户安装的第三方应用的存放位置，这与下面代码返回结果的顺序是一致的
File file = new File(&quot;/data/app/&quot;);
String[] files = file.list();
也就是说，我们按顺序打印这个数组，就能知道哪个接收器会先接收到这个广播，哪个会后接收到&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
</content>
        <summary type="html">&lt;hr /&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;今天项目里有这样一个需求，访问一个请求并把手机号作为参数传过去，同时拦截收到的短信验证码，自动填进EditText，一个看似很简单的功能。然而在真机上测试竟然没有拦截到，把优先级调到最大也无济于事。&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;四处寻访，原来BroadcastReceiver除了有优先级顺序之外，还有注册的顺序。&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;大家都知道广播分有序广播和无序广播，有序广播和无序广播的区别就是，有序广播可以被任何一个接受者消耗掉，而无序广播则不可以，注册的话既可以在代码里面动态注册，也可以在Manifest里面直接声明，屌丝青年大多会直接在Manifest里面定义注册，文艺青年一般使用代码动态注册。这两种方式接受的广播的顺序是不一样的。&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;一般来说有序广播在同等优先级的情况下有这样的顺序&lt;/p&gt;

&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;动态注册的BroadcastReceiver，先注册的先接收&lt;/li&gt;
&lt;li&gt;Manifest里注册的BroadcastReceiver，接收广播的顺序与String[] java.io.File.list()顺序一致&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在不同优先级的情况下&lt;/p&gt;

&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;有序广播按优先级顺序接收&lt;/li&gt;
&lt;li&gt;无序广播因为是异步的所以接收broadcast的顺序不确定。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt; 假设有如下优先级的5个接收器  并且B先于C注册     &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt; 1.动态A（优先级=1）      &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 2.动态B（优先级=2）      &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 3.动态C（优先级=2）      &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 4.静态D（优先级=1)       &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 5.静态E（优先级=2）      &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 那么实际接收顺序应为：  B C E A D  &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;hr /&gt;

&lt;h2&gt;关于 String[] java.io.File.list()&lt;/h2&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;我们以开机时候发出的广播android.intent.action.BOOT_COMPLETED为例，这是个无序广播。如果应用想要开启自启动，那么就要监听这个广播，程序启动之前，动态广播接收器肯定是无法使用的，只能在XML中静态注册。大家都知道，第三方应用是存放在/data/app目录下，当安装完毕之后，你会找到一个文件，他的名字是以与安装的应用包名开始的，然后可能会跟着&quot;-数字.apk&quot;，比如：com.android.test-1.apk。接收的顺序与这个名字是有关的！那么关系是怎样的呢？&lt;/p&gt;

&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;系统在开机的时候，会按着一个顺序解析apk，首先，会解析手机中的/system/framework这个目录，原生系统中，这下面就一个apk - framework-res.apk，当然各个厂商也会加入自己的内容&lt;/li&gt;
&lt;li&gt;然后受到重视的文件夹按顺序分别为：
/system/app，
/vendor/app，
/data/app，
/drm/app-private
那么每个文件夹下解析的顺序是怎样的呢？我们先只看/data/app，也就是用户安装的第三方应用的存放位置，这与下面代码返回结果的顺序是一致的
File file = new File(&quot;/data/app/&quot;);
String[] files = file.list();
也就是说，我们按顺序打印这个数组，就能知道哪个接收器会先接收到这个广播，哪个会后接收到&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
</summary>
    </entry>
    
    <entry>
        <title>My first blog</title>
        <link href="http://liyouhai.com/others/My%20first%20blog.html"/>
        <updated>2014-09-27T00:00:00+08:00</updated>
        <id>http://liyouhai.com//others/My first blog</id>
        <content type="html">&lt;hr /&gt;

&lt;h2&gt;历程&lt;/h2&gt;

&lt;p&gt;一直以来我都是只写笔记不写博客，总以为写博客很无聊。直到后来接触到了github，接触到了开源，我才发现了分享的乐趣，我想我的那些笔记一定也不喜欢孤独，那我也加入开源的世界吧。搭建自己的博客，分享自己在工作中的问题，这本身不就是一件快乐的事情么？从有想法到实现，辛辛苦苦花费了将近一周的时间，终于把博客搭建了起来，中间的辛苦和快乐也只有自己最清楚。&lt;/p&gt;

&lt;p&gt;大概步骤记录下来&lt;/p&gt;

&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;搭建ruby环境，搭建python环境，搭建jekyll环境&lt;/li&gt;
&lt;li&gt;找模板，改模板（最辛苦的一件事）&lt;/li&gt;
&lt;li&gt;添加统计，评论等小功能&lt;/li&gt;
&lt;li&gt;发布到github&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;中途碰到了无数问题，只能自己解决，百度不行google，google不行，那就只能换一种方法，反正最后终于搞成了如今的样子，还有一些bug，慢慢在解决吧，重点应该是内容而不是界面。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;下一个目标&lt;/h2&gt;

&lt;p&gt;微信公众账号 lol&lt;/p&gt;

&lt;hr /&gt;
</content>
        <summary type="html">&lt;hr /&gt;

&lt;h2&gt;历程&lt;/h2&gt;

&lt;p&gt;一直以来我都是只写笔记不写博客，总以为写博客很无聊。直到后来接触到了github，接触到了开源，我才发现了分享的乐趣，我想我的那些笔记一定也不喜欢孤独，那我也加入开源的世界吧。搭建自己的博客，分享自己在工作中的问题，这本身不就是一件快乐的事情么？从有想法到实现，辛辛苦苦花费了将近一周的时间，终于把博客搭建了起来，中间的辛苦和快乐也只有自己最清楚。&lt;/p&gt;

&lt;p&gt;大概步骤记录下来&lt;/p&gt;

&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;搭建ruby环境，搭建python环境，搭建jekyll环境&lt;/li&gt;
&lt;li&gt;找模板，改模板（最辛苦的一件事）&lt;/li&gt;
&lt;li&gt;添加统计，评论等小功能&lt;/li&gt;
&lt;li&gt;发布到github&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;中途碰到了无数问题，只能自己解决，百度不行google，google不行，那就只能换一种方法，反正最后终于搞成了如今的样子，还有一些bug，慢慢在解决吧，重点应该是内容而不是界面。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;下一个目标&lt;/h2&gt;

&lt;p&gt;微信公众账号 lol&lt;/p&gt;

&lt;hr /&gt;
</summary>
    </entry>
    

</feed>